{"version":3,"sources":["context.js","api.js","components/Card/Card.jsx","components/Cards/Cards.jsx","components/Details/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","getData","url","a","amount","fetch","data","json","Card","name","index","useState","currentAbilities","setAbilities","currentPokemon","setPokemon","handleCard","useContext","useEffect","pokemonFromServer","abilities","getAbilities","className","onClick","src","alt","map","ability","classNames","Cards","cardsAmount","setAmount","cards","setCards","itemsFromServer","results","getPokemons","card","match","type","Details","activeCard","id","padStart","types","slot","stats","base_stat","weight","moves","length","App","setCard","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c35360ce.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","export const getData = async (url, amount = '') => {\n  const data = await fetch(`${url}${amount}`);\n\n  return data.json();\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport './Card.scss';\nimport classNames from 'classnames';\n\nimport { Context } from '../../context';\nimport { getData } from '../../api';\n\nexport const Card = ({ url, name, index }) => {\n  const [ currentAbilities, setAbilities ] = useState([]);\n  const [ currentPokemon, setPokemon ] = useState([]);\n\n  const { handleCard } = useContext(Context);\n\n  useEffect(() => {\n    const getAbilities = async () => {\n      const pokemonFromServer = await getData(url);\n  \n      setPokemon(pokemonFromServer);\n      setAbilities(pokemonFromServer.abilities);\n    };\n\n    getAbilities();\n  }, [url]);\n\n  return (\n    <div\n      className=\"Card\"\n      onClick={() => handleCard(currentPokemon)}\n    >\n      <img\n        className=\"Card__image\"\n        src={`https://pokeres.bastionbot.org/images/pokemon/${index}.png`}\n        alt={name}\n      />\n      <h2 className=\"Card__title\">\n        {name}\n      </h2>\n\n      <ul className=\"Card__skills\">\n        {currentAbilities.map(ability => (\n          <li\n            key={ability.ability.name}\n            className={classNames(\"Card__skill\", {\n              \"Card__skill--overgrow\": ability.ability.name === \"overgrow\",\n              \"Card__skill--fire\": ability.ability.name === \"fire\",\n              \"Card__skill--poison\": ability.ability.name === \"poison\",\n              \"Card__skill--static\": ability.ability.name === \"static\",\n              \"Card__skill--grass\": ability.ability.name === \"grass\",\n              \"Card__skill--electric\": ability.ability.name === \"electric\",\n              \"Card__skill--shield-dust\": ability.ability.name === \"shield-dust\",\n              \"Card__skill--stench\": ability.ability.name === \"stench\",\n              \"Card__skill--drizzle\": ability.ability.name === \"drizzle\",\n              \"Card__skill--run-away\": ability.ability.name === \"run-away\",\n              \"Card__skill--sturdy\": ability.ability.name === \"sturdy\",\n              \"Card__skill--damp\": ability.ability.name === \"damp\",\n              \"Card__skill--limber\": ability.ability.name === \"limber\",\n              \"Card__skill--chlorophyll\": ability.ability.name === \"chlorophyll\",\n              \"Card__skill--blaze\": ability.ability.name === \"blaze\",\n              \"Card__skill--solar-power\": ability.ability.name === \"solar-power\",\n              \"Card__skill--torrent\": ability.ability.name === \"torrent\",\n              \"Card__skill--rain-dish\": ability.ability.name === \"rain-dish\",\n              \"Card__skill--compound-eyes\": ability.ability.name === \"compound-eyes\",\n              \"Card__skill--tinted-lens\": ability.ability.name === \"tinted-lens\",\n              \"Card__skill--shed-skin\": ability.ability.name === \"shed-skin\",\n              \"Card__skill--swarm\": ability.ability.name === \"swarm\",\n              \"Card__skill--sniper\": ability.ability.name === \"sniper\",\n              \"Card__skill--keen-eye\": ability.ability.name === \"keen-eye\",\n              \"Card__skill--tangled-feet\": ability.ability.name === \"tangled-feet\",\n              \"Card__skill--big-pecks\": ability.ability.name === \"big-pecks\",\n              \"Card__skill--guts\": ability.ability.name === \"guts\",\n              \"Card__skill--hustle\": ability.ability.name === \"hustle\",\n              \"Card__skill--intimidate\": ability.ability.name === \"intimidate\",\n              \"Card__skill--unnerve\": ability.ability.name === \"unnerve\",\n              \"Card__skill--lightning-rod\": ability.ability.name === \"lightning-rod\",\n              \"Card__skill--sand-rush\": ability.ability.name === \"sand-rush\",\n              // ...\n            })}\n          >\n            {ability.ability.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './Cards.scss';\n\nimport { getData } from '../../api';\nimport { Card } from '../Card/Card';\n\nexport const Cards = () => {\n  const [ cardsAmount, setAmount ] = useState(12);\n  const [ cards, setCards ] = useState([]);\n\n  useEffect(() => {\n    const getPokemons = async () => {\n      const itemsFromServer = await getData(\n        'https://pokeapi.co/api/v2/pokemon/?limit=',\n        cardsAmount\n      );\n\n      setCards(itemsFromServer.results);\n    };\n\n    getPokemons();\n  }, [cardsAmount]);\n\n  return (\n    <div className=\"Cards\">\n      <ul className=\"Cards__list\">\n        {cards.map(card => (\n          <Card\n            url={card.url}\n            name={card.name}\n            index={card.url.match(/\\/pokemon\\/(\\d+)/)[1]}\n            key={card.name}\n          />\n        ))}\n      </ul>\n\n      <button\n        onClick={() => {\n          setAmount(cardsAmount => cardsAmount + 12);\n        }}\n        className=\"Cards__more\"\n        type=\"button\"\n      >\n        Load more\n      </button>\n    </div>\n  )\n}\n","import React from 'react';\nimport './Details.scss';\n\nexport const Details = ({ activeCard }) => {\n\n  return (\n    <aside className=\"Details\">\n      {!activeCard\n        ? <span className=\"Details__question\">?</span> \n        : <>\n            <img\n              className=\"Details__image\"\n              src={`https://pokeres.bastionbot.org/images/pokemon/${activeCard.id}.png`}\n              alt={activeCard.name}\n            />\n\n            <h2 className=\"Details__title\">\n              {activeCard.name}\n              {' #' + `${activeCard.id}`.padStart(3, '0')}\n            </h2>\n\n            <ul className=\"Details__list\">\n              <li className=\"Details__stat Details__stat--type\">\n                <span>Type </span>\n                <ul className=\"Details__inner-list\">\n                  {activeCard.types.map(type => (\n                    <li key={type.slot}>\n                      {type.type.name}\n                    </li>\n                  ))}\n                </ul>\n              </li>\n\n              <li className=\"Details__stat Details__stat--attack\">\n                <span>Attack </span>\n                <span>{activeCard.stats[1].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--defense\">\n                <span>Defense </span>\n                <span>{activeCard.stats[2].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--hp\">\n                <span>HP </span>\n                <span>{activeCard.stats[0].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--sp-attack\">\n                <span>SP Attack </span>\n                <span>{activeCard.stats[3].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--sp-defense\">\n                <span>SP Defense </span>\n                <span>{activeCard.stats[4].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--speed\">\n                <span>Speed </span>\n                <span>{activeCard.stats[5].base_stat}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--weight\">\n                <span>Weight </span>\n                <span>{activeCard.weight}</span>\n              </li>\n\n              <li className=\"Details__stat Details__stat--moves\">\n                <span>Total moves </span>\n                <span>{activeCard.moves.length}</span>\n              </li>\n            </ul>\n          </>\n      }\n    </aside>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Context } from './context';\nimport { Cards } from './components/Cards/Cards';\nimport { Details } from './components/Details/Details';\n\nexport const App = () => {\n  const [ activeCard, setCard ] = useState('');\n\n  const handleCard = (card) => {\n    setCard(card);\n  }\n\n  return (\n    <Context.Provider value={{ handleCard }}>\n      <div className=\"App\">\n        <h1 className=\"App__title\">Pokedex</h1>\n\n        <main className=\"App__main\">\n          <Cards />\n          <Details activeCard={activeCard} />\n        </main>\n      </div>\n    </Context.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}